
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if the user is authenticated.
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the requesting user is the owner of the document.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the generatedDocuments collection.
    match /generatedDocuments/{docId} {
      // A user can only create a document for themselves.
      // The userId in the new document must match the creator's UID.
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      
      // A user can read, update, or delete a document only if they are the owner.
      // This rule covers individual 'get' requests and also filters queries ('list' operations).
      // If a query would return a document the user cannot read, the entire query will fail.
      // This is secure because our client code always queries by userId.
      allow read, update, delete: if isAuthenticated() && isOwner(resource.data.userId);
    }
  }
}
